{"version":3,"sources":["components/site/Header.js","components/site/Footer.js","components/site/Home.js","components/googleMapAPI/mapEvent.js","components/Events/Events.js","components/RestaurantAPI/restaurantDisplay.js","components/RestaurantAPI/Restaurant.js","components/weatherAPI/TempButton.js","components/weatherAPI/Location.js","components/weatherAPI/Conditions.js","components/weatherAPI/Weather.js","components/site/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","className","NavbarBrand","href","Nav","navbar","NavItem","NavLink","Footer","Row","Home","d","day","getDay","month","getMonth","date","getDate","year","getFullYear","dateBuilder","Date","MapContainer","useState","selected","setSelected","googleMapsApiKey","mapContainerStyle","height","width","zoom","center","lat","lng","name","location","map","item","description","event","link","position","onClick","onSelect","clickable","onCloseClick","App","Data","Titles","slice","events","pageNumber","setPageNumber","pagesVisited","displayEvents","Container","Col","lg","Table","hover","bordered","responsive","scope","url","target","id","pageCount","Math","ceil","length","previousLabel","nextLabel","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","Restaurant","props","console","log","restaurants","restaurant","index","cuisines","user_rating","aggregate_rating","address","Restaurants","usePosition","latitude","longitude","setRestaurants","useEffect","fetch","method","headers","then","res","json","data","nearby_restaurants","TempButton","Fragment","type","value","checked","degreeType","onChange","setDegreeType","htmlFor","Location","conditions","weather","cod","round","main","temp","Weather","fahrenheitWeather","setFahrenheitWeather","celsiusWeather","setCelsiusWeather","Conditions","Sidebar","to","exact","path","Events","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e80d6050.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Navbar, NavbarBrand, Nav, NavItem, NavLink} from \"reactstrap\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <Navbar className=\"header\">\r\n                <NavbarBrand href=\"/\">Naptown Tour</NavbarBrand>\r\n                <Nav className=\"ml-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink href=\"https://github.com/jilherma/Events_app\">\r\n                            Github\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {Row} from \"reactstrap\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Row>\r\n                <p>&copy; Jillian Howell 2021</p>\r\n            </Row>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from \"react\"; \r\n\r\nconst Home = () => {\r\n    const dateBuilder = (d) => {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        let day = days[d.getDay()];\r\n        let month = months[d.getMonth()];\r\n        let date = d.getDate();\r\n        let year = d.getFullYear();\r\n\r\n        return `${day} ${month} ${date}, ${year}` \r\n        \r\n    }\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"homeDiv\">\r\n                <h1>Welcome to Indy's Guide for Entertainment</h1>\r\n                <div className=\"date\">\r\n                    <h3>{dateBuilder(new Date())}</h3>\r\n                    </div>\r\n                <h4>This app is intended to be a reference for local events around town with google map markers, current weather at your geolocation and restaurants near you! Lets Explore!\r\n                </h4>\r\n                <hr />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\n\r\nexport const MapContainer = () => {\r\n  const [ selected, setSelected ] = useState({});\r\n\r\n  const onSelect = item => {\r\n    setSelected(item);\r\n  }\r\n  const locations = [\r\n    {\r\n      name: \"Eiteljorg Museum\",\r\n      location: { \r\n        lat: 39.76878,\r\n        lng: -86.16781\r\n      },\r\n    },\r\n    {\r\n      name: \"Children's Museum\",\r\n      location: { \r\n        lat: 39.81083,\r\n        lng: -86.15795\r\n      },\r\n    },\r\n    {\r\n      name: \"Indianapolis Canal Walk\",\r\n      location: { \r\n        lat: 39.77523,\r\n        lng: -86.16501\r\n      },\r\n    },\r\n    {\r\n      name: \"Benjamin Harrison Presidential Site\",\r\n      location: { \r\n        lat: 39.78407,\r\n        lng: -86.15386\r\n      },\r\n    },\r\n    {\r\n      name: \"Taxman Bargersville\",\r\n      location: { \r\n        lat: 39.52126,\r\n        lng: -86.16641\r\n      },\r\n    },\r\n    {\r\n      name: \"Indianapolis Motor Speedway Museum\",\r\n      location: { \r\n        lat: 39.79014,\r\n        lng: -86.23362\r\n      },\r\n    },\r\n    {\r\n      name: \"Newfields\",\r\n      location: { \r\n        lat: 39.82609,\r\n        lng: -86.18566\r\n      },\r\n    },\r\n    {\r\n      name: \"Indiana Historical Society\",\r\n      location: { \r\n        lat: 39.77039,\r\n        lng: -86.16556\r\n      },\r\n    },\r\n    {\r\n      name: \"Indiana State Museum\",\r\n      location: { \r\n        lat: 39.76886,\r\n        lng: -86.16945\r\n      },\r\n    },\r\n    {\r\n      name: \"Garfield Park Conservatory & Gardens\",\r\n      location: { \r\n        lat: 39.73264,\r\n        lng: -86.14132\r\n      },\r\n    }\r\n  ];\r\n  \r\n  const mapStyles = {        \r\n    height: '100vh',\r\n    width: \"100vw\"\r\n  };\r\n  \r\n  const defaultCenter = {\r\n    lat: 39.79528, \r\n    lng: -86.15201\r\n  }\r\n  \r\n  return (\r\n     <LoadScript\r\n       googleMapsApiKey= 'AIzaSyCmjPP1f-OvwfRANEXk-pzSohWtQKAXEzc'>\r\n        <GoogleMap\r\n          mapContainerStyle={mapStyles}\r\n          zoom={10}\r\n          center={defaultCenter}\r\n          >\r\n         {\r\n            locations.map(item => {\r\n              return (\r\n              <Marker \r\n                key={item.name} \r\n                description={item.event}\r\n                link={item.link}\r\n                position={item.location}\r\n                onClick={() => onSelect(item)}\r\n              />\r\n              )\r\n            })\r\n         }\r\n        {\r\n            selected.location && \r\n            (\r\n              <InfoWindow\r\n              position={selected.location}\r\n              clickable={true}\r\n              onCloseClick={() => setSelected({})}\r\n            >\r\n              <p>{selected.name}</p>\r\n            </InfoWindow>\r\n            )\r\n         }\r\n     </GoogleMap>\r\n     </LoadScript>\r\n  )\r\n};\r\n\r\nexport default MapContainer;\r\n// import React from \"react\";\r\n// import PlacesAutocomplete, {\r\n//   geocodeByAddress,\r\n//   getLatLng\r\n// } from \"react-places-autocomplete\";\r\n\r\n// export default function App() {\r\n//   const [address, setAddress] = React.useState(\"\");\r\n//   const [coordinates, setCoordinates] = React.useState({\r\n//     lat: null,\r\n//     lng: null\r\n//   });\r\n\r\n//   const handleSelect = async value => {\r\n//     const results = await geocodeByAddress(value);\r\n//     const latLng = await getLatLng(results[0]);\r\n//     setAddress(value);\r\n//     setCoordinates(latLng);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <PlacesAutocomplete\r\n//         value={address}\r\n//         onChange={setAddress}\r\n//         onSelect={handleSelect}\r\n//       >\r\n//         {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n//           <div>\r\n//             <p>Latitude: {coordinates.lat}</p>\r\n//             <p>Longitude: {coordinates.lng}</p>\r\n\r\n//             <input {...getInputProps({ placeholder: \"Type address\" })} />\r\n\r\n//             <div>\r\n//               {loading ? <div>...loading</div> : null}\r\n\r\n//               {suggestions.map(suggestion => {\r\n//                 const style = {\r\n//                   backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\r\n//                 };\r\n\r\n//                 return (\r\n//                   <div {...getSuggestionItemProps(suggestion, { style })}>\r\n//                     {suggestion.description}\r\n//                   </div>\r\n//                 );\r\n//               })}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </PlacesAutocomplete>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { Container, Col, Row, Table } from 'reactstrap';\r\nimport ReactPaginate from 'react-paginate';\r\nimport Data from './data.json';\r\n\r\nfunction App() {\r\n    const [events, setEvents] = useState(Data.Titles.slice(0, 30));\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n\r\n    const eventsPerPage = 5\r\n    const pagesVisited = pageNumber * eventsPerPage\r\n\r\n    const displayEvents = events.slice(pagesVisited, pagesVisited + eventsPerPage).map((event => {\r\n        return (\r\n            <div className=\"eventTbl\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"12\">\r\n                            <Table hover bordered responsive >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Event</th>\r\n                                        <th scope=\"row\">Location</th>\r\n                                        <th scope=\"row\">Link</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                        <tr key={event.id} className=\"events\">\r\n                                            <td>{event.date}</td>\r\n                                            <td> {event.name}</td>\r\n                                            <td> {event.location}</td>\r\n                                            <td><a href={event.url} target=\"blank\">{event.url}</a></td>\r\n                                        </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }));\r\n    const pageCount = Math.ceil(events.length / eventsPerPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected);\r\n    };\r\n\r\n    return <div className=\"app\">\r\n        {displayEvents}\r\n        <ReactPaginate \r\n            previousLabel={'Previous'}\r\n            nextLabel={'Next'}\r\n            pageCount={pageCount}\r\n            onPageChange={changePage}\r\n            containerClassName={'paginationBttns'}\r\n            previousLinkClassName={'previousBttn'}\r\n            nextLinkClassName={'nextBttn'}\r\n            disabledClassName={'paginationDisabled'}\r\n            activeClassName={'paginationActive'}\r\n        />\r\n    \r\n    </div>\r\n}\r\nexport default App;\r\n\r\n  \r\n\r\n    ","const Restaurant = (props) => {\r\n    console.log(props);\r\n    return (\r\n        props.restaurants.map((restaurant, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <td>{restaurant.restaurant.name}</td>\r\n                    <td>{restaurant.restaurant.cuisines}</td>\r\n                    <td>{restaurant.restaurant.user_rating.aggregate_rating}</td>\r\n                    <td>{restaurant.restaurant.location.address}</td>\r\n                    <td><a href={restaurant.restaurant.url} target=\"blank\">{restaurant.restaurant.name}</a></td>\r\n                </tr>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default Restaurant;","import React, { useEffect, useState } from 'react';\r\nimport { usePosition } from 'use-position';\r\nimport { Container, Col, Row, Table } from 'reactstrap';\r\nimport Restaurant from './restaurantDisplay';\r\n\r\n\r\nconst Restaurants = () => {\r\n    const {\r\n      latitude,\r\n      longitude,\r\n    } = usePosition();\r\n\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const userKey = '7d7b035f516913d8ca80b25363350681';\r\n\r\n    console.log(latitude, longitude);\r\n\r\n    const getRestaurant = (props) => {\r\n        fetch(`https://developers.zomato.com/api/v2.1/geocode?lat=${latitude}&lon=${longitude}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'user-key': userKey,\r\n                'Content-Type': \"application/json\"\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setRestaurants(data.nearby_restaurants))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!latitude || !longitude) return;\r\n        getRestaurant();\r\n    }, [latitude, longitude])\r\n\r\n    return (    \r\n        <div className=\"restaurant\">\r\n            <Container>\r\n                <Row>\r\n                    <Col lg=\"12\">\r\n                    <h1>Restaurants Near You</h1>\r\n                    <br/>\r\n                            <Table hover bordered responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">Name</th>\r\n                                        <th scope=\"row\">Cuisine</th>\r\n                                        <th scope=\"row\">Rating</th>\r\n                                        <th scope=\"row\">Address</th>\r\n                                        <th scope=\"row\">Link</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {restaurants.length > 0 ? //@ If there is a restaurants object present --> display table else display nothing\r\n                                    <Restaurant restaurants={restaurants} /> : null}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>    \r\n    )\r\n};\r\n\r\nexport default Restaurants;","import React from 'react';\r\n\r\nconst TempButton = (props) => {\r\n    return (\r\n        <React.Fragment>   \r\n            <div className=\"form-check form-check-inline\">\r\n                <input className=\"form-check-input\" \r\n                type=\"radio\"\r\n                name=\"degree-type\"\r\n                id=\"celsius\"\r\n                value=\"metric\"\r\n                checked={props.degreeType === \"metric\"}\r\n                onChange={event => props.setDegreeType(event.target.value)} />\r\n                <label className=\"form-check-label\" htmlFor=\"celsius\">Celsius</label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n                <input className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"degree-type\"\r\n                id=\"degree-type\"\r\n                value=\"imperial\"\r\n                checked={props.degreeType === \"imperial\"}\r\n                onChange={event => props.setDegreeType(event.target.value)} />\r\n                <label className=\"form-check-label\" htmlFor=\"farenheit\">Farenheit</label>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TempButton;","\r\nimport React from 'react';\r\nimport { usePosition } from 'use-position';\r\n\r\nconst Location = () => {\r\n    const watch = true;\r\n    const {\r\n      latitude,\r\n      longitude,\r\n    } = usePosition(watch);\r\n    \r\n    return (\r\n      <div className=\"locationBox\">\r\n        <h8 className=\"changePlease\">Lat: {latitude}</h8>\r\n        <br />\r\n        <h8 className=\"changePlease\">Lng: {longitude}</h8>\r\n      </div>\r\n    );\r\n};\r\n\r\n  export default Location;","import React from 'react';\r\n\r\nconst conditions = (props) => {\r\n    return (\r\n        <div>\r\n            {props.weather.cod === 200 ?\r\n                <div>\r\n                    <h5><strong>{props.weather.name}</strong></h5>\r\n                    <p>It is currently {Math.round(props.weather.main.temp)} degrees out with {props.weather.weather[0].description}.</p>\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default conditions;","import React, {useState, useEffect} from 'react';\r\nimport {usePosition} from 'use-position';\r\nimport TempButton from './TempButton';\r\nimport Location from './Location';\r\nimport Conditions from './Conditions';\r\n\r\nconst Weather = () => {\r\n    const {\r\n        latitude,\r\n        longitude,\r\n    } = usePosition();\r\n\r\n    \r\n    \r\n    const [fahrenheitWeather, setFahrenheitWeather] = useState([]);\r\n    const [celsiusWeather, setCelsiusWeather] = useState([]);\r\n    const [degreeType, setDegreeType] = useState('imperial');\r\n\r\n    const getFahrenheit = () => {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=imperial&appid=4f8222f6dcf630b07c31a2f43d759446`,{\r\n            method: 'GET',\r\n            \r\n        })\r\n        .then(res => res.json())\r\n        .then(res => setFahrenheitWeather(res))\r\n    }\r\n    const getCelsius = () => {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=4f8222f6dcf630b07c31a2f43d759446`,{\r\n            method: 'GET',\r\n            \r\n        })\r\n        .then(res => res.json())\r\n        .then(res => setCelsiusWeather(res))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!latitude || !longitude) return; \r\n        getFahrenheit();\r\n        getCelsius();\r\n        // eslint-disable-next-line\r\n    }, [latitude, longitude])\r\n        \r\n    return (\r\n            <div className=\"weather\">\r\n                <div className=\"weatherDiv\">\r\n                    <h2>Current Weather Conditions</h2>\r\n                    <Conditions weather ={degreeType === 'metric' ? celsiusWeather : fahrenheitWeather} />\r\n                    <TempButton degreeType = {degreeType} setDegreeType = {setDegreeType}/>\r\n                    <Location />\r\n                </div>\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default Weather;\r\n","import React from 'react'\r\nimport {\r\n    Route,\r\n    Link,\r\n    Switch\r\n} from 'react-router-dom'\r\nimport Home from './Home';\r\nimport Maps from '../googleMapAPI/mapEvent';\r\nimport Events from '../Events/Events';\r\nimport Restaurants from '../RestaurantAPI/Restaurant';\r\nimport Weather from '../weatherAPI/Weather';\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-list-styling\">\r\n                <ul className=\"sidebar-list list-unstyled\">\r\n                    <li><Link to=\"/Events_app\">Home</Link></li>\r\n                    <li><Link to=\"/maps\">Google Maps</Link></li>\r\n                    <li><Link to=\"/events\">Local Events</Link></li>\r\n                    <li><Link to=\"/food\">Local Restaurants</Link></li>\r\n                    <li><Link to=\"/weatherAPI\">Local Weather</Link></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"sidebar-route\">\r\n                <Switch>\r\n                    <Route exact path=\"/Events_app\"><Home /></Route>\r\n                    <Route exact path=\"/home\"><Home /></Route>\r\n                    <Route exact path=\"/maps\"><Maps /></Route>\r\n                    <Route exact path=\"/events\"><Events /></Route>\r\n                    <Route exact path=\"/food\"><Restaurants /></Route>\r\n                    <Route exact path=\"/weatherAPI\"><Weather /></Route>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Header from './components/site/Header';\nimport Footer from './components/site/Footer';\nimport Sidebar from './components/site/Sidebar';\nimport {\n  BrowserRouter as Router, \n} from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Router>\n      <Sidebar />\n      </Router>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}